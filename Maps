import java.util.*;
import java.util.concurrent.ConcurrentHashMap;

import per.hyf.fillContainer.CountingMapData;

//通过map接口 可用的操作
public class Maps {
	public static void printKeys(Map<Integer,String> map) {
		System.out.print("Size = " + map.size() + ", ");
		System.out.print("Keys: ");
		System.out.print(map.keySet());	//produce a set of the keys
	}
	public static void test(Map<Integer,String> map) {
		System.out.print(map.getClass().getSimpleName());
		map.putAll(new CountingMapData(25));
		//map has 'Set' Behavior for keys  无序无重复
		map.putAll(new CountingMapData(25));	//不会变成50个
		printKeys(map);
		//producing a Collection of the value:	创建收集值
		System.out.println("Value: ");
		System.out.println(map.values());
		System.out.println(map);
		System.out.println("map.containsKey(11): " + map.containsKey(11)); //判断是否存在
		System.out.println("map.get(11): " + map.get(11));
		System.out.println("map.countainValue('F0'): " + map.containsValue("F0"));
		Integer key = map.keySet().iterator().next();
		System.out.println("First key in map: " + key );
		map.remove(key);
		printKeys(map);
		map.clear();
		System.out.println("map.isEmpty(): " + map.isEmpty());
		map.putAll(new CountingMapData(25));
		// operations on the set change the map:
		map.keySet().removeAll(map.keySet());
		System.out.println("map.isEmpty: " + map.isEmpty());
	}
	public static void main(String[] args) {
		test(new HashMap<Integer, String>());
		test(new TreeMap<Integer,String>());
		test(new LinkedHashMap<Integer,String>());
		test(new IdentityHashMap<Integer,String>());
		test(new ConcurrentHashMap<Integer,String>());
		test(new WeakHashMap<Integer,String>());
	}
}
